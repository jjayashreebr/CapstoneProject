<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="19" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-02T12:03:14 PST" name="Suite" finished-at="2022-03-02T12:05:35 PST" duration-ms="140163">
    <groups>
      <group name="regression">
        <method signature="RegistrationTest.verifyRegistartionWithValidCredentials(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" name="verifyRegistartionWithValidCredentials" class="com.qa.testscripts.RegistrationTest"/>
      </group> <!-- regression -->
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
      <group name="frontend">
        <method signature="LoginTest.verifyLoginWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" name="verifyLoginWithEmptyCredentials" class="com.qa.testscripts.LoginTest"/>
        <method signature="LoginTest.verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" name="verifyRegistartionWithInvalidEmail" class="com.qa.testscripts.LoginTest"/>
        <method signature="RegistrationTest.verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" name="verifyRegistartionWithInvalidEmail" class="com.qa.testscripts.RegistrationTest"/>
        <method signature="RegistrationTest.verifyRegistartionWithValidCredentials(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" name="verifyRegistartionWithValidCredentials" class="com.qa.testscripts.RegistrationTest"/>
        <method signature="RegistrationTest.verifySignUpWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" name="verifySignUpWithEmptyCredentials" class="com.qa.testscripts.RegistrationTest"/>
      </group> <!-- frontend -->
    </groups>
    <test started-at="2022-03-02T12:03:14 PST" name="Test" finished-at="2022-03-02T12:05:35 PST" duration-ms="140163">
      <class name="com.qa.testscripts.RegistrationTest">
        <test-method signature="verifyPageTitle()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:14 PST" name="verifyPageTitle" finished-at="2022-03-02T12:03:18 PST" duration-ms="3529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:18 PST" name="tearDown" finished-at="2022-03-02T12:03:19 PST" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:19 PST" name="verifyRegistartionWithInvalidEmail" finished-at="2022-03-02T12:03:21 PST" duration-ms="2439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistartionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:21 PST" name="tearDown" finished-at="2022-03-02T12:03:22 PST" duration-ms="793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyRegistartionWithValidCredentials(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:23 PST" name="verifyRegistartionWithValidCredentials" data-provider="registrationData" finished-at="2022-03-02T12:03:31 PST" duration-ms="7939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistartionWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:31 PST" name="tearDown" finished-at="2022-03-02T12:03:32 PST" duration-ms="1327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyRegistrationWithExistingUser(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:32 PST" name="verifyRegistrationWithExistingUser" data-provider="registrationData" finished-at="2022-03-02T12:03:37 PST" duration-ms="4870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationWithExistingUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:37 PST" name="tearDown" finished-at="2022-03-02T12:03:38 PST" duration-ms="924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySignUpWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:38 PST" name="verifySignUpWithEmptyCredentials" finished-at="2022-03-02T12:03:43 PST" duration-ms="4788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignUpWithEmptyCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@2a3b5b47]" started-at="2022-03-02T12:03:43 PST" name="tearDown" finished-at="2022-03-02T12:03:44 PST" duration-ms="955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.RegistrationTest -->
      <class name="com.qa.testrunner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:04:06 PST" name="setUpClass" finished-at="2022-03-02T12:04:06 PST" duration-ms="220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@752e4223]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:04:06 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-02T12:04:11 PST" duration-ms="5313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with valid Search Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:04:11 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-02T12:04:17 PST" duration-ms="5485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with valid Search Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:04:17 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-02T12:04:51 PST" duration-ms="34574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with invalid Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:04:51 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-02T12:05:26 PST" duration-ms="34908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with invalid Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:05:26 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-02T12:05:30 PST" duration-ms="3986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with Empty Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:05:30 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-02T12:05:35 PST" duration-ms="4266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify whether search text box and search button are shown in UI"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.qa.testrunner.TestRunner@28701274]" started-at="2022-03-02T12:05:35 PST" name="tearDownClass" finished-at="2022-03-02T12:05:35 PST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.qa.testrunner.TestRunner -->
      <class name="com.qa.testscripts.LoginTest">
        <test-method signature="verifyDeleteLogin()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:44 PST" name="verifyDeleteLogin" finished-at="2022-03-02T12:03:44 PST" duration-ms="849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:44 PST" name="tearDown" finished-at="2022-03-02T12:03:44 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginShowsProperLoggedInMessage(java.util.HashMap)[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:45 PST" name="verifyLoginShowsProperLoggedInMessage" data-provider="registrationData" finished-at="2022-03-02T12:03:50 PST" duration-ms="5052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginShowsProperLoggedInMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:50 PST" name="tearDown" finished-at="2022-03-02T12:03:51 PST" duration-ms="993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:51 PST" name="verifyLoginWithEmptyCredentials" finished-at="2022-03-02T12:03:54 PST" duration-ms="3008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithEmptyCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:54 PST" name="tearDown" finished-at="2022-03-02T12:03:55 PST" duration-ms="946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithEmptyEmailCredential()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:55 PST" name="verifyLoginWithEmptyEmailCredential" finished-at="2022-03-02T12:03:55 PST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithEmptyEmailCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:55 PST" name="tearDown" finished-at="2022-03-02T12:03:55 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:55 PST" name="verifyLoginWithInvalidCredentials" finished-at="2022-03-02T12:03:56 PST" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:56 PST" name="tearDown" finished-at="2022-03-02T12:03:56 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithValidCredential(java.util.HashMap)[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:56 PST" name="verifyLoginWithValidCredential" data-provider="registrationData" finished-at="2022-03-02T12:03:58 PST" duration-ms="2265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:58 PST" name="tearDown" finished-at="2022-03-02T12:03:58 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:03:58 PST" name="verifyRegistartionWithInvalidEmail" finished-at="2022-03-02T12:04:01 PST" duration-ms="2719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistartionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@411f53a0]" started-at="2022-03-02T12:04:01 PST" name="tearDown" finished-at="2022-03-02T12:04:02 PST" duration-ms="1012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.LoginTest -->
      <class name="com.qa.testscripts.AutomationExcerciseHomePageTests">
        <test-method signature="verifyPageTitle()[pri:0, instance:com.qa.testscripts.AutomationExcerciseHomePageTests@2b71e916]" started-at="2022-03-02T12:04:02 PST" name="verifyPageTitle" finished-at="2022-03-02T12:04:05 PST" duration-ms="2725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.AutomationExcerciseHomePageTests@2b71e916]" started-at="2022-03-02T12:04:05 PST" name="tearDown" finished-at="2022-03-02T12:04:06 PST" duration-ms="1272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.AutomationExcerciseHomePageTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
