<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="19" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-03T10:22:24 PST" name="Suite" finished-at="2022-03-03T10:25:27 PST" duration-ms="183491">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
      <group name="category">
        <method signature="CategoryProductTest.verifyAllCategoryIsShown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" name="verifyAllCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" name="verifyAllSubCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" name="verifySubCategorySearch" class="com.qa.testscripts.CategoryProductTest"/>
      </group> <!-- category -->
      <group name="frontend">
        <method signature="CategoryProductTest.verifyAllCategoryIsShown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" name="verifyAllCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" name="verifyAllSubCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" name="verifySubCategorySearch" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="LoginTest.verifyLoginWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" name="verifyLoginWithEmptyCredentials" class="com.qa.testscripts.LoginTest"/>
        <method signature="LoginTest.verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" name="verifyRegistartionWithInvalidEmail" class="com.qa.testscripts.LoginTest"/>
      </group> <!-- frontend -->
    </groups>
    <test started-at="2022-03-03T10:22:24 PST" name="Test" finished-at="2022-03-03T10:25:27 PST" duration-ms="183491">
      <class name="com.qa.testrunner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:22:24 PST" name="setUpClass" finished-at="2022-03-03T10:22:25 PST" duration-ms="773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@6dadcf58]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:22:25 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:22:37 PST" duration-ms="11796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with valid Search Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:22:37 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:22:44 PST" duration-ms="7192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with valid Search Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:22:44 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:23:22 PST" duration-ms="37877" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with invalid Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:23:22 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:23:59 PST" duration-ms="37313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with invalid Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:23:59 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:24:08 PST" duration-ms="9056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with Empty Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:24:08 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:24:15 PST" duration-ms="6907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify whether search text box and search button are shown in UI"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.qa.testrunner.TestRunner@4802796d]" started-at="2022-03-03T10:24:15 PST" name="tearDownClass" finished-at="2022-03-03T10:24:15 PST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.qa.testrunner.TestRunner -->
      <class name="com.qa.testscripts.CategoryProductTest">
        <test-method signature="verifyAllCategoryIsShown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:24:49 PST" name="verifyAllCategoryIsShown" finished-at="2022-03-03T10:24:54 PST" duration-ms="5632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllCategoryIsShown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:24:54 PST" name="tearDown" finished-at="2022-03-03T10:24:54 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:24:54 PST" name="verifyAllSubCategoryIsShown" data-provider="categoryData" finished-at="2022-03-03T10:25:00 PST" duration-ms="5728" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WOMEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@40696fc6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllSubCategoryIsShown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:00 PST" name="tearDown" finished-at="2022-03-03T10:25:00 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:00 PST" name="verifyAllSubCategoryIsShown" data-provider="categoryData" finished-at="2022-03-03T10:25:07 PST" duration-ms="6309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@20a3321a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllSubCategoryIsShown -->
        <test-method signature="verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:07 PST" name="verifyAllSubCategoryIsShown" data-provider="categoryData" finished-at="2022-03-03T10:25:13 PST" duration-ms="6313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KIDS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3ce2c5f6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllSubCategoryIsShown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:07 PST" name="tearDown" finished-at="2022-03-03T10:25:07 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:13 PST" name="tearDown" finished-at="2022-03-03T10:25:13 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:13 PST" name="verifySubCategorySearch" data-provider="subcategoryData" finished-at="2022-03-03T10:25:20 PST" duration-ms="7076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WOMEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dress]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WOMEN - DRESS PRODUCTS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubCategorySearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:20 PST" name="tearDown" finished-at="2022-03-03T10:25:20 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:20 PST" name="verifySubCategorySearch" data-provider="subcategoryData" finished-at="2022-03-03T10:25:27 PST" duration-ms="7497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Jeans]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[MEN - JEANS PRODUCTS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubCategorySearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@62379589]" started-at="2022-03-03T10:25:27 PST" name="tearDown" finished-at="2022-03-03T10:25:27 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.CategoryProductTest -->
      <class name="com.qa.testscripts.LoginTest">
        <test-method signature="verifyDeleteLogin()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:15 PST" name="verifyDeleteLogin" finished-at="2022-03-03T10:24:23 PST" duration-ms="7713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:23 PST" name="tearDown" finished-at="2022-03-03T10:24:23 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginShowsProperLoggedInMessage(java.util.HashMap)[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:25 PST" name="verifyLoginShowsProperLoggedInMessage" data-provider="registrationData" finished-at="2022-03-03T10:24:36 PST" duration-ms="11339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginShowsProperLoggedInMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:36 PST" name="tearDown" finished-at="2022-03-03T10:24:36 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:36 PST" name="verifyLoginWithEmptyCredentials" finished-at="2022-03-03T10:24:40 PST" duration-ms="4120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithEmptyCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:40 PST" name="tearDown" finished-at="2022-03-03T10:24:40 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithEmptyEmailCredential()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:40 PST" name="verifyLoginWithEmptyEmailCredential" finished-at="2022-03-03T10:24:41 PST" duration-ms="967" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithEmptyEmailCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:41 PST" name="tearDown" finished-at="2022-03-03T10:24:41 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:41 PST" name="verifyLoginWithInvalidCredentials" finished-at="2022-03-03T10:24:42 PST" duration-ms="983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:42 PST" name="tearDown" finished-at="2022-03-03T10:24:42 PST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithValidCredential(java.util.HashMap)[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:42 PST" name="verifyLoginWithValidCredential" data-provider="registrationData" finished-at="2022-03-03T10:24:44 PST" duration-ms="1897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method signature="verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:44 PST" name="verifyRegistartionWithInvalidEmail" finished-at="2022-03-03T10:24:49 PST" duration-ms="4464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistartionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:44 PST" name="tearDown" finished-at="2022-03-03T10:24:44 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@5e0e82ae]" started-at="2022-03-03T10:24:49 PST" name="tearDown" finished-at="2022-03-03T10:24:49 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
