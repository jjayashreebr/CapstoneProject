<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="25" passed="25" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-03T10:10:34 PST" name="Suite" finished-at="2022-03-03T10:14:58 PST" duration-ms="263979">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
      <group name="regression">
        <method signature="RegistrationTest.verifyRegistartionWithValidCredentials(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" name="verifyRegistartionWithValidCredentials" class="com.qa.testscripts.RegistrationTest"/>
      </group> <!-- regression -->
      <group name="category">
        <method signature="CategoryProductTest.verifyAllCategoryIsShown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" name="verifyAllCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" name="verifyAllSubCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" name="verifySubCategorySearch" class="com.qa.testscripts.CategoryProductTest"/>
      </group> <!-- category -->
      <group name="frontend">
        <method signature="CategoryProductTest.verifyAllCategoryIsShown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" name="verifyAllCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" name="verifyAllSubCategoryIsShown" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="CategoryProductTest.verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" name="verifySubCategorySearch" class="com.qa.testscripts.CategoryProductTest"/>
        <method signature="LoginTest.verifyLoginWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" name="verifyLoginWithEmptyCredentials" class="com.qa.testscripts.LoginTest"/>
        <method signature="LoginTest.verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" name="verifyRegistartionWithInvalidEmail" class="com.qa.testscripts.LoginTest"/>
        <method signature="RegistrationTest.verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" name="verifyRegistartionWithInvalidEmail" class="com.qa.testscripts.RegistrationTest"/>
        <method signature="RegistrationTest.verifyRegistartionWithValidCredentials(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" name="verifyRegistartionWithValidCredentials" class="com.qa.testscripts.RegistrationTest"/>
        <method signature="RegistrationTest.verifySignUpWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" name="verifySignUpWithEmptyCredentials" class="com.qa.testscripts.RegistrationTest"/>
      </group> <!-- frontend -->
    </groups>
    <test started-at="2022-03-03T10:10:34 PST" name="Test" finished-at="2022-03-03T10:14:58 PST" duration-ms="263979">
      <class name="com.qa.testscripts.RegistrationTest">
        <test-method signature="verifyPageTitle()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:10:34 PST" name="verifyPageTitle" finished-at="2022-03-03T10:10:42 PST" duration-ms="8312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:10:42 PST" name="tearDown" finished-at="2022-03-03T10:10:42 PST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:10:42 PST" name="verifyRegistartionWithInvalidEmail" finished-at="2022-03-03T10:10:48 PST" duration-ms="5851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistartionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:10:48 PST" name="tearDown" finished-at="2022-03-03T10:10:48 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyRegistartionWithValidCredentials(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:10:50 PST" name="verifyRegistartionWithValidCredentials" data-provider="registrationData" finished-at="2022-03-03T10:11:05 PST" duration-ms="14811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistartionWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:11:05 PST" name="tearDown" finished-at="2022-03-03T10:11:05 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyRegistrationWithExistingUser(java.util.HashMap)[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:11:05 PST" name="verifyRegistrationWithExistingUser" data-provider="registrationData" finished-at="2022-03-03T10:11:13 PST" duration-ms="7826" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationWithExistingUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:11:13 PST" name="tearDown" finished-at="2022-03-03T10:11:13 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySignUpWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:11:13 PST" name="verifySignUpWithEmptyCredentials" finished-at="2022-03-03T10:11:18 PST" duration-ms="5188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignUpWithEmptyCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.RegistrationTest@498d318c]" started-at="2022-03-03T10:11:18 PST" name="tearDown" finished-at="2022-03-03T10:11:18 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.RegistrationTest -->
      <class name="com.qa.testrunner.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:12:47 PST" name="setUpClass" finished-at="2022-03-03T10:12:48 PST" duration-ms="1270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7fd3197b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:12:48 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:13:02 PST" duration-ms="13888" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with valid Search Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:13:02 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:13:15 PST" duration-ms="12997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with valid Search Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:13:15 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:14:01 PST" duration-ms="45889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with invalid Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:14:01 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:14:41 PST" duration-ms="40064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with invalid Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:14:41 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:14:50 PST" duration-ms="9114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search with Empty Text"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:14:50 PST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-03-03T10:14:58 PST" duration-ms="8036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify whether search text box and search button are shown in UI"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Search]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.qa.testrunner.TestRunner@7b9a4292]" started-at="2022-03-03T10:14:58 PST" name="tearDownClass" finished-at="2022-03-03T10:14:58 PST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.qa.testrunner.TestRunner -->
      <class name="com.qa.testscripts.CategoryProductTest">
        <test-method signature="verifyAllCategoryIsShown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:11:47 PST" name="verifyAllCategoryIsShown" finished-at="2022-03-03T10:11:54 PST" duration-ms="7415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllCategoryIsShown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:11:54 PST" name="tearDown" finished-at="2022-03-03T10:11:54 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:11:54 PST" name="verifyAllSubCategoryIsShown" data-provider="categoryData" finished-at="2022-03-03T10:12:01 PST" duration-ms="7061" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WOMEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@259ae1a9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllSubCategoryIsShown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:01 PST" name="tearDown" finished-at="2022-03-03T10:12:01 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:01 PST" name="verifyAllSubCategoryIsShown" data-provider="categoryData" finished-at="2022-03-03T10:12:09 PST" duration-ms="7796" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@67201002]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllSubCategoryIsShown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:09 PST" name="tearDown" finished-at="2022-03-03T10:12:09 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyAllSubCategoryIsShown(java.lang.String,[Ljava.lang.String;)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:09 PST" name="verifyAllSubCategoryIsShown" data-provider="categoryData" finished-at="2022-03-03T10:12:19 PST" duration-ms="9504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[KIDS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@d082916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllSubCategoryIsShown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:19 PST" name="tearDown" finished-at="2022-03-03T10:12:19 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:19 PST" name="verifySubCategorySearch" data-provider="subcategoryData" finished-at="2022-03-03T10:12:29 PST" duration-ms="10232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[WOMEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Dress]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WOMEN - DRESS PRODUCTS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubCategorySearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:29 PST" name="tearDown" finished-at="2022-03-03T10:12:29 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifySubCategorySearch(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:29 PST" name="verifySubCategorySearch" data-provider="subcategoryData" finished-at="2022-03-03T10:12:40 PST" duration-ms="10925" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MEN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Jeans]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[MEN - JEANS PRODUCTS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubCategorySearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.CategoryProductTest@4fb61f4a]" started-at="2022-03-03T10:12:40 PST" name="tearDown" finished-at="2022-03-03T10:12:40 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.CategoryProductTest -->
      <class name="com.qa.testscripts.LoginTest">
        <test-method signature="verifyDeleteLogin()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:18 PST" name="verifyDeleteLogin" finished-at="2022-03-03T10:11:20 PST" duration-ms="2278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:20 PST" name="tearDown" finished-at="2022-03-03T10:11:20 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginShowsProperLoggedInMessage(java.util.HashMap)[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:20 PST" name="verifyLoginShowsProperLoggedInMessage" data-provider="registrationData" finished-at="2022-03-03T10:11:34 PST" duration-ms="13149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginShowsProperLoggedInMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:34 PST" name="tearDown" finished-at="2022-03-03T10:11:34 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithEmptyCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:34 PST" name="verifyLoginWithEmptyCredentials" finished-at="2022-03-03T10:11:38 PST" duration-ms="4539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithEmptyCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:38 PST" name="tearDown" finished-at="2022-03-03T10:11:38 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithEmptyEmailCredential()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:38 PST" name="verifyLoginWithEmptyEmailCredential" finished-at="2022-03-03T10:11:39 PST" duration-ms="426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithEmptyEmailCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:39 PST" name="tearDown" finished-at="2022-03-03T10:11:39 PST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:39 PST" name="verifyLoginWithInvalidCredentials" finished-at="2022-03-03T10:11:39 PST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:39 PST" name="tearDown" finished-at="2022-03-03T10:11:39 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="verifyLoginWithValidCredential(java.util.HashMap)[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:39 PST" name="verifyLoginWithValidCredential" data-provider="registrationData" finished-at="2022-03-03T10:11:41 PST" duration-ms="2250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{country=usa, firstname=j, address=abc street, city=santa clara, mobile=1234, lastname=j, zipcode=95051, password=test@123, sno=1, name=jj, state=ca, email=jj@j.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method signature="verifyRegistartionWithInvalidEmail()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:41 PST" name="verifyRegistartionWithInvalidEmail" finished-at="2022-03-03T10:11:47 PST" duration-ms="5485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistartionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:41 PST" name="tearDown" finished-at="2022-03-03T10:11:41 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.LoginTest@3e58a80e]" started-at="2022-03-03T10:11:47 PST" name="tearDown" finished-at="2022-03-03T10:11:47 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.LoginTest -->
      <class name="com.qa.testscripts.AutomationExcerciseHomePageTests">
        <test-method signature="verifyPageTitle()[pri:0, instance:com.qa.testscripts.AutomationExcerciseHomePageTests@4fb0f2b9]" started-at="2022-03-03T10:12:40 PST" name="verifyPageTitle" finished-at="2022-03-03T10:12:47 PST" duration-ms="6739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPageTitle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testscripts.AutomationExcerciseHomePageTests@4fb0f2b9]" started-at="2022-03-03T10:12:47 PST" name="tearDown" finished-at="2022-03-03T10:12:47 PST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testscripts.AutomationExcerciseHomePageTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
